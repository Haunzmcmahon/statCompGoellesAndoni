---
title: "Regression Project: EU-SILC analyses"
subtitle: "[Dataset: eusilcP Intention](https://ec.europa.eu/eurostat/web/microdata/european-union-statistics-on-income-and-living-conditions)"
author: "Johannes Gölles & Kevin Andoni"
date: today
embed-resources: true
format:
  html: 
    output-file: Project-EU-SILC-Analyses.html
    #output-ext: "html.html" 
    toc: true
    toc-location: right
    code-link: true
    code-tools: true
    #df-print: kable
    theme:
      light: flatly
      dark: darkly
    #echo: fenced
  pdf: 
    output-file: Project-EU-SILC-Analyses.pdf 
    toc: true
    toc-depth: 2
    number-sections: true
    code-link: true
    df-print: tibble
    crossref: 
      lof-title: "List of Figures"
      lot-title: "List of Tables"
fig-align: center
execute: 
  warning: false
---

{{< pagebreak >}}

```{=tex}
\listoffigures 
\listoftables
```

{{< pagebreak >}}


# Introduction

## Libraries

```{r}
#| code-summary: Libraries
#| code-fold: true
library <- function(...) {suppressPackageStartupMessages(base::library(...))}
library(tidyverse)  # For data manipulation and visualization
library(janitor)    # For cleaning column names and data
library(knitr)      # For creating tables in reports
library(rmarkdown)  # For rendering reports
library(ggplot2)    # For creating visualizations
library(corrplot)   # For correlation matrix visualizations
library(kableExtra) # For formatting the data dictionary
library(MASS)
library(simFrame)
library(dplyr)
library(sjPlot)
library(interactions)
```


{{< pagebreak >}}

## Data Collection

The data for this analysis comes from the **European Union Statistics on Income and Living Conditions (EU-SILC)** survey. The EU-SILC is a large-scale cross-sectional and longitudinal survey conducted annually across European Union member states. It provides harmonized data on income, living conditions, poverty, and social exclusion. For this analysis, data from the East Austria regions—Vienna, Lower Austria, and Burgenland—was extracted.

Below is a data dictionary summarizing the key variables used in this analysis:

```{r}
#| label: tbl-data-dictionary
#| tbl-cap: "Data Dictionary for EU-SILC Dataset"
#| echo: false
#| code-fold: false

# Create a data dictionary as a tibble
data_dictionary <- tibble::tibble(
  Variable = c(
    "old_age_benefits", "main_income_earner", "economic_status", 
    "household_size", "age_years", "region_name"
  ),
  Description = c(
    "Net old-age benefits received by individuals, including pensions, care allowances, and other financial supports.",
    "Indicates whether the individual is the main income earner of their household (TRUE/FALSE).",
    "Primary economic activity of the individual (e.g., full-time work, retired, unemployed).",
    "Number of individuals living in the respondent's household.",
    "Age of the respondent in years.",
    "Region where the respondent resides (Vienna, Lower Austria, or Burgenland)."
  ),
  Type = c(
    "Numeric", "Logical", "Categorical", 
    "Numeric", "Numeric", "Categorical"
  )
)

# Display the data dictionary as a formatted table
knitr::kable(data_dictionary, caption = "Data Dictionary for EU-SILC Dataset") |> 
  kableExtra::kable_styling(full_width = FALSE, position = "center") |>
  kableExtra::column_spec(2, width = "25em") # Adjust width of Description column
```



### Type of Survey and Execution

The EU-SILC is conducted as a household survey, combining personal interviews and administrative data. It gathers socioeconomic information at both the household and individual levels. The survey period typically spans a calendar year, ensuring comprehensive coverage of annual income and employment data.


```{r}
# Load the eusilcP dataset
data("eusilcP", package = "simFrame")
# ?eusilcP
# Define NUTS-2 regions corresponding to "East Austria" (AT1)
east_austria_regions <- c("Burgenland", "Lower Austria", "Vienna")

# Subset the data for East Austria and select relevant variables
subset_data <- subset(
  eusilcP,
  region %in% east_austria_regions,
  select = c("py100n", "main", "ecoStat", "hsize", "age", "region")
)

# Adjust factor levels of 'region' to only include selected regions
subset_data$region <- droplevels(subset_data$region)

# View a summary of the subset data
print(str(subset_data))
```

### Data Cleaning

To prepare the dataset for analysis, we renamed variables to make them more intuitive (e.g., py100n to old_age_benefits and ecoStat to economic_status) and removed rows with missing values, resulting in a loss of approximately 4,000 rows. This ensures the dataset is clean and reliable for analysis. Additionally, we recoded the numeric levels of economic_status into meaningful labels (e.g., 'FT_Work' for full-time work, 'Retired' for retired individuals) to improve interpretability, and converted household_size from categorical to numeric format to enable numerical comparisons in later analyses.

Zero values in `old_age_benefits` represent individuals who do not receive any benefits. Including these zeros in regression analysis would distort the model by introducing unnecessary noise and biasing the results. By filtering out zeros, we focus on participants who receive benefits, enabling a more accurate understanding of the factors influencing benefit amounts.


```{r}
#| code-fold: true

# Rename columns for clarity
cleaned_data <- subset_data %>%
  rename(
    old_age_benefits = py100n,
    main_income_earner = main,
    economic_status = ecoStat,
    household_size = hsize,
    age_years = age,
    region_name = region
  )

cleaned_data <- cleaned_data %>% na.omit() # We lose ~4000 rows

# Replace numeric levels of economic_status with abbreviations
cleaned_data$economic_status <- factor(cleaned_data$economic_status, 
                                       levels = c(1, 2, 3, 4, 5, 6, 7),
                                       labels = c(
                                         "FT_Work",    # Working Full Time
                                         "PT_Work",    # Working Part Time
                                         "Unemployed", # Unemployed
                                         "Student",    # Pupil/Student/Training/Military Service
                                         "Retired",    # Retired/Early Retirement/Given Up Business
                                         "Disabled",   # Permanently Disabled/Unfit to Work/Other Inactive
                                         "Domestic"    # Domestic Tasks/Care Responsibilities
                                       ))

#removing the ordering for region_name
cleaned_data$region_name <- factor(cleaned_data$region_name, ordered = FALSE)


cleaned_data$household_size <- as.numeric(as.character(cleaned_data$household_size))

# Filter out zeros in old_age_benefits for regression analysis
cleaned_data_no_zeros <- cleaned_data %>%
  filter(old_age_benefits > 0)

# Summary of data cleaning steps
cleaning_summary <- tibble::tibble(
  Step = c("Original Dataset", "After Removing Missing Values", "After Filtering Zeros"),
  Number_of_Rows = c(nrow(eusilcP), nrow(cleaned_data), nrow(cleaned_data_no_zeros))
)

# Display the summary table
knitr::kable(cleaning_summary, caption = "Summary of Data Cleaning Steps") |>
  kableExtra::kable_styling(full_width = FALSE, position = "center")

```

```{r}
# Compare distributions before and after cleaning
summary_original <- subset_data %>%
  summarize(
    mean_age = mean(age, na.rm = TRUE),
    prop_retired = mean(ecoStat == 5, na.rm = TRUE), # Example for retired individuals
    prop_vienna = mean(region == "Vienna", na.rm = TRUE)
  )

summary_cleaned <- cleaned_data_no_zeros %>%
  summarize(
    mean_age = mean(age_years),
    prop_retired = mean(economic_status == "Retired"),
    prop_vienna = mean(region_name == "Vienna")
  )

# Combine summaries into a table for comparison
comparison_summary <- bind_rows(
  Original = summary_original,
  Cleaned = summary_cleaned,
  .id = "Dataset"
)

knitr::kable(comparison_summary, caption = "Comparison of Key Variables Before and After Cleaning") |>
  kableExtra::kable_styling(full_width = FALSE, position = "center")

```



### Data Preparation

To prepare the data for analysis:

1. **Subsetting**: Only observations from the regions of Vienna, Lower Austria, and Burgenland were retained.
2. **Variable Renaming**: Variable names were simplified for clarity:
   - `py100n` → `old_age_benefits`
   - `main` → `main_income_earner`
   - `ecoStat` → `economic_status`
   - `hsize` → `household_size`
   - `age` → `age_years`
   - `region` → `region_name`
3. **Missing Value Treatment**: Rows with missing values were removed using the `na.omit()` function, resulting in a loss of approximately 4,000 rows.
4. **Factor Level Adjustments**: Categorical variables were recoded to ensure consistent levels:
   - Factor levels of `region` were adjusted to include only the specified East Austria regions.
   - Household_size which was a categorical variable was changed to numerical data
5. **Reclassification**: Certain inconsistencies were identified and addressed.


The cleaned dataset is now ready for descriptive and inferential analysis. Below is a summary of the data preparation process:


```{r}
# View summary of cleaned_data
summary(cleaned_data)
```

### Summary of the Cleaned Dataset

The cleaned dataset contains a detailed overview of individual-level and household-level variables for respondents from the East Austria regions. Below is a description of the key variables:

- **Economic Status (`economic_status`)**:  
  Respondents are categorized into seven groups based on their primary economic activity:
  - "FT_Work" (Full-time Work): **9,116 individuals**.
  - "PT_Work" (Part-time Work): **1,718 individuals**.
  - "Unemployed": **1,314 individuals**.
  - "Student" (includes unpaid work experience or in compulsory military or community service): **1,295 individuals**.
  - "Retired": **5,427 individuals**.
  - "Disabled": **191 individuals**.
  - "Domestic" (engaged in household activities): **1,643 individuals**.

- **Old age benefits (`old_age_benefits`)**:  
  Old age benefit values exhibit high skewness, with most respondents reporting **0 old age benefits**, as evident from the median and third quartile values.  
  - Minimum old_age_benefits: **€0**.  
  - Maximum old_age_benefits: **€101,777**.  
  - Mean old_age_benefits: **€3,864**, affected by a few persons with high old age benefits.  

- **Main income earner (`main_income_earner`)**:  
  A binary indicator of employment shows that **11,275 individuals** are the main income earner of their household (`TRUE`), while **9,429 individuals** are not living in a household where another person is the main income earner (`FALSE`).

- **Household Size (`household_size`)**:  
  The number of individuals in a household ranges from **1 to 6**, with most households consisting of:
  - **2 members (6,211 households)**.
  - **3 members (4,410 households)**.
  - **1 member (4,384 households)**.
  Which explains the median of 2 and the mean of 2.708 individuals per household. The smallest households were single person households and the most people in a household mentioned in this survey were 8 individuals.

- **Age (`age_years`)**:  
  Respondent ages range from **16 to 96 years**, with:  
  - Median age: **44 years**.  
  - Mean age: **46.18 years**, indicating a slightly older sample.  
  - The interquartile range is from **32 to 60 years**.  

- **Region (`region_name`)**:  
  The dataset includes observations from three regions in East Austria:  
  - **Burgenland**: **1,690 individuals**.  
  - **Lower Austria**: **9,313 individuals**.  
  - **Vienna**: **9,701 individuals**.

This summary highlights differences across key variables, providing a foundation for exploring their relationships in subsequent analyses.


### Research Question

"This study aims to answer the following question: What factors influence the distribution of old-age benefits in East Austria, and how do these benefits vary across socioeconomic groups?"



## Descriptive Analysis of the Sample

In this section, we will explore the key features of the data through various descriptive statistics and visualizations. These analyses will help us understand the distribution and relationships between variables, as well as identify any patterns or outliers.

### Age (`age_years`)
The age distribution of respondents is visualized below. The summary statistics highlight a slightly older sample, with most individuals aged between 30 and 60.

```{r age_histogram, echo=TRUE, fig.align="center"}
# Histogram for age
ggplot(data = cleaned_data, aes(x = age_years)) +
  geom_histogram(binwidth = 5, fill = "steelblue", color = "black") +
  labs(title = "Distribution of Respondents' Age", x = "Age (Years)", y = "Frequency") +
  theme_minimal()
```

The histogram shows a concentration of respondents between 30 and 60 years old. A noticeable decline occurs after age 65, reflecting a reduced representation of older individuals in the dataset.

### 1. Univariate Analysis

#### Old age benefits Distribution
The first variable we will explore is **old_age_benefits**. We will visualize its distribution to check for any skewness and identify outliers.


```{r}
# Histogram for positive old_age_benefits
ggplot(data = cleaned_data_no_zeros, aes(x = old_age_benefits)) +
  geom_histogram(binwidth = 1000, fill = "steelblue", color = "black") +
  labs(title = "Distribution of Positive Old Age Benefits", x = "Old Age Benefits (€)", y = "Frequency") +
  theme_minimal()
```

The histogram for positive old_age_benefits shows a right-skewed distribution, with most values concentrated at lower benefit amounts. This indicates that while many individuals receive some benefits, only a small proportion receive high amounts.






```{r}
# Employment Status (Bar plot with percentage)
ggplot(cleaned_data_no_zeros, aes(x = main_income_earner)) +
  geom_bar(aes(y = (after_stat(count))/sum(after_stat(count))), fill = "lightgreen", color = "black", alpha = 0.7) +
  scale_y_continuous(labels = scales::percent) +  # Format y-axis as percentage
  labs(title = "Main Income Earner Distribution", x = "Is Main Income Earner", y = "Percentage") +
  theme_minimal()

```
This simple barplot shows that around 65% of participants are the main income earners of their households.

```{r}
# Economic Status (Bar plot)
ggplot(cleaned_data_no_zeros, aes(x = economic_status)) +
  geom_bar(fill = "salmon", color = "black", alpha = 0.7) +
  labs(title = "Economic Status Distribution", x = "Economic Status", y = "Count") +
  theme_minimal()


```

The previous barplot clearly shows that the biggest part of surveyants are working full time, the second largest group are retirees followed by individuals fulfilling domestic tasks and care responsibilities. The number of people that are working part time, are unemployed or studying each make up a similar share of the dataset. The lowest number of participants are either permanently disabled or/and unfit to work.
```{r}
# Household Size (Histogram)
ggplot(cleaned_data_no_zeros, aes(x = household_size)) +
  geom_histogram(binwidth = 1, fill = "lightcoral", color = "black", alpha = 0.7) +
  labs(title = "Household Size Distribution", x = "Household Size", y = "Count") +
  theme_minimal()
```

The household size distribution in the dataset is right-skewed, with the majority of households consisting of 1 to 4 members. The most common household size is 2 members, followed by 3 and 1 member households. As household size increases, the frequency rapidly decreases, with very few households having 5 or more members. This results in a long tail on the right side, indicating that while smaller households are more frequent, larger households are much less common.

```{r}
# Age (Histogram)
ggplot(cleaned_data_no_zeros, aes(x = age_years)) +
  geom_histogram(binwidth = 5, fill = "lightyellow", color = "black", alpha = 0.7) +
  labs(title = "Age Distribution", x = "Age (years)", y = "Count") +
  theme_minimal()
```

The age distribution in the dataset ranges from 16 to 96 years, with a mean age of 46.18 years and a median age of 44, indicating a slightly older sample. The majority of respondents fall within the interquartile range of 32 to 60 years. The distribution is relatively balanced, with a few older individuals contributing to the higher mean. Overall, the dataset represents a wide age range, with the most common ages clustered in the mid-adult range.

### 2. Bivariate Relationships Between Predictors and Response Variable
For each independent variable, we will plot its relationship with the dependent variable (old_age_benefits). Since old_age_benefits is numeric, we can use scatter plots for numeric variables and boxplots for categorical variables.

#### Main Income Earner vs. Old Age Benefits: Boxplot to see the distribution of old-age benefits for different income earner statuses.

```{r, fig.align='center'}
# Main Income Earner vs Old Age Benefits (Boxplot)
ggplot(cleaned_data_no_zeros, aes(x = main_income_earner, y = old_age_benefits)) +
  geom_boxplot(fill = "skyblue", color = "black", alpha = 0.7) +
  labs(title = "Old Age Benefits by Employment Status", x = "Is main income earner", y = "Old Age Benefits (€)") +
  theme_minimal()
```
```{r}
# Summary statistics for Old Age Benefits by Main Income Earner status
summary_stats <- cleaned_data_no_zeros %>%
  group_by(main_income_earner) %>%
  summarise(
    mean_benefits = mean(old_age_benefits, na.rm = TRUE),
    median_benefits = median(old_age_benefits, na.rm = TRUE),
    Q1_benefits = quantile(old_age_benefits, 0.25, na.rm = TRUE),
    Q3_benefits = quantile(old_age_benefits, 0.75, na.rm = TRUE),
    IQR_benefits = IQR(old_age_benefits, na.rm = TRUE),
    min_benefits = min(old_age_benefits, na.rm = TRUE),
    max_benefits = max(old_age_benefits, na.rm = TRUE)
  )

# Display the summary statistics
print(summary_stats)
```


The analysis of old age benefits by employment status reveals that a large proportion of both main income earners and non-main income earners receive no benefits, as indicated by the median values of 0 for both groups. However, the mean old age benefits are significantly higher for main income earners (€5422.25) compared to non-main income earners (€1999.67), suggesting that individuals who are the primary income earners tend to receive greater benefits. The interquartile range (IQR) and maximum values are also higher for main income earners, indicating a wider spread of benefits within this group. Despite these differences, the overall distribution for both groups is heavily skewed toward 0 benefits, with only a small subset of individuals receiving substantial amounts.


#### Economic Status vs. Old Age Benefits: Boxplot to show the distribution of old-age benefits across economic statuses.
```{r, fig.align='center'}
# Economic Status vs Old Age Benefits (Boxplot)
ggplot(cleaned_data_no_zeros, aes(x = economic_status, y = old_age_benefits)) +
  geom_boxplot(fill = "salmon", color = "black", alpha = 0.7) +
  labs(title = "Old Age Benefits by Economic Status", x = "Economic Status", y = "Old Age Benefits (€)") +
  theme_minimal()
```
```{r}
# Summarizing old age benefits by economic status
summary_stats2 <- cleaned_data_no_zeros %>%
  group_by(economic_status) %>%
  summarise(
    mean_benefits = mean(old_age_benefits, na.rm = TRUE),
    median_benefits = median(old_age_benefits, na.rm = TRUE),
    Q1_benefits = quantile(old_age_benefits, 0.25, na.rm = TRUE),
    Q3_benefits = quantile(old_age_benefits, 0.75, na.rm = TRUE),
    IQR_benefits = IQR(old_age_benefits, na.rm = TRUE),
    min_benefits = min(old_age_benefits, na.rm = TRUE),
    max_benefits = max(old_age_benefits, na.rm = TRUE)
  )

# View the summary statistics
print(summary_stats2)
```


The boxplot and summary of Old Age Benefits by Economic Status reveal considerable differences in the distribution of benefits across various economic status categories. For most groups, the median benefits are 0, indicating that a large portion of individuals in these categories receive no old age benefits. However, certain groups, such as "Retired" and "Disabled," show a wider range of benefits, with some individuals receiving notably higher benefits (reflected by the spread and presence of outliers). The "FT_Work" and "PT_Work" categories show tighter distributions, with the majority of individuals receiving no benefits. The plot highlights that while many individuals across economic status groups do not receive any benefits, there are distinct differences in the variability and higher benefits for certain groups, particularly those who are retired or disabled.


#### Household Size vs. Old Age Benefits: Scatter plot to show how household size affects old-age benefits.
```{r, fig.align='center'}
# Household Size vs Old Age Benefits (Scatter plot)
ggplot(cleaned_data_no_zeros, aes(x = household_size, y = old_age_benefits)) +
  geom_point(color = "darkred", alpha = 0.5) +
  labs(title = "Old Age Benefits by Household Size", x = "Household Size", y = "Old Age Benefits (€)") +
  theme_minimal()
```

```{r}
# Summary statistics for Old Age Benefits by Household Size
summary_stats_household <- cleaned_data_no_zeros %>%
  group_by(household_size) %>%
  summarise(
    mean_benefits = mean(old_age_benefits, na.rm = TRUE),
    median_benefits = median(old_age_benefits, na.rm = TRUE),
    Q1_benefits = quantile(old_age_benefits, 0.25, na.rm = TRUE),
    Q3_benefits = quantile(old_age_benefits, 0.75, na.rm = TRUE),
    IQR_benefits = IQR(old_age_benefits, na.rm = TRUE),
    min_benefits = min(old_age_benefits, na.rm = TRUE),
    max_benefits = max(old_age_benefits, na.rm = TRUE)
  )

# View the summary statistics by Household Size
print(summary_stats_household)

# Correlation between Household Size and Old Age Benefits
correlation <- cor(cleaned_data_no_zeros$household_size, cleaned_data_no_zeros$old_age_benefits, use = "complete.obs")

```

The scatter plot depicting household size versus old age benefits reveals a weak negative trend, where households with smaller sizes tend to have higher old age benefits, and larger households tend to have lower benefits. Although there is a general decline in benefits as household size increases, the plot also shows considerable variability within each household size category. Many data points cluster at the lower end of the old age benefits scale, indicating that a significant proportion of individuals, regardless of household size, do not receive old age benefits. 

The correlation coefficient of `r round(correlation, 3)` further confirms the weak inverse relationship between household_size and old_age_benefits, suggesting that as household size increases, the old age benefits decrease slightly on average.

#### Age vs. Old Age Benefits: Scatter plot to show the relationship between age and old-age benefits.


```{r, fig.align='center'}
# Age vs Old Age Benefits (Scatter plot)
ggplot(cleaned_data_no_zeros, aes(x = age_years, y = old_age_benefits)) +
  geom_point(color = "blue", alpha = 0.5) +
  labs(title = "Old Age Benefits by Age", x = "Age (years)", y = "Old Age Benefits (€)") +
  theme_minimal()

# Calculate correlation between Age and Old Age Benefits
cor_age_benefits <- cor(cleaned_data_no_zeros$age_years, cleaned_data_no_zeros$old_age_benefits, use = "complete.obs")
```

The scatter plot of Age vs. Old Age Benefits suggests a moderate positive correlation, with older individuals generally receiving higher old age benefits, although there is significant variability. The correlation coefficient between Age and Old Age Benefits is `r round(cor_age_benefits, 3)`, indicating a moderate positive relationship. Despite this, the plot reveals some outliers and wide variability in the benefits received across different age groups.





### 3. Joint influences of all possible pairs of predictors on the response to show possible interactions

#### Main Income Earner and Economic Status (Boxplot)

```{r, fig.align='center'}
# Subset data for False Main Income Earners
false_income_data <- cleaned_data_no_zeros[cleaned_data_no_zeros$main_income_earner == FALSE, ]

# Subset data for True Main Income Earners
true_income_data <- cleaned_data_no_zeros[cleaned_data_no_zeros$main_income_earner == TRUE, ]

# Plot for False Main Income Earners
ggplot(false_income_data, aes(x = economic_status, y = old_age_benefits)) +
  geom_boxplot(fill = "lightblue", color = "black", alpha = 0.7) +
  labs(title = "Old Age Benefits by economic status for non-main income earners", 
       x = "Economic Status", y = "Old Age Benefits (€)") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotate x labels for better readability

# Plot for True Main Income Earners
ggplot(true_income_data, aes(x = economic_status, y = old_age_benefits)) +
  geom_boxplot(fill = "lightcoral", color = "black", alpha = 0.7) +
  labs(title = "Old Age Benefits for main Income Earners by Economic Status", 
       x = "Economic Status", y = "Old Age Benefits (€)") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotate x labels for better readability

```

These two plots show the joint influence of economic status and whether participants are the main income earners of the household. Similar to the Bivariate analysis of these variables it is visible that economic status seems to have a larger impact with the retired status being the only one that shows median values for old age benefits that are larger than zero. This is the case for both, main and non-main income earners which could mean, that being the mean income earner has no influence on the amount of old age benefits.


```{r}
# Plot using facet_wrap() for better organization
ggplot(cleaned_data_no_zeros, aes(x = factor(household_size), y = old_age_benefits)) +
  geom_boxplot(fill = "lightgreen", color = "black", alpha = 0.7) +
  labs(title = "Old Age Benefits by Household Size and Economic Status", 
       x = "Household Size", y = "Old Age Benefits (€)") +
  facet_wrap(~ economic_status, scales = "free_y") + # Create separate plots for each economic status
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotate x labels for readability



```

These Facet-based Plots show that for all economic status apart from Retired, FT_Work and Domestic almost no surveyants earn old age benefits that are not equal to 0€. For the economic status FT_Work and Domestic a large number of outliers show participants that earn non zero amounts of old age benefits. The one plot that allows us to interpret further is the one showing the economic status Retired. On this boxplot it is visible that across all household sizes the median old age benefits remain fairly similar. The number of outliers is higher for smaller households, which could be because most participants are in households with 1-3 inhabitants.

```{r}
# Heatmap for Age and Economic Status vs Old Age Benefits
ggplot(cleaned_data_no_zeros, aes(x = age_years, y = economic_status, fill = old_age_benefits)) +
  geom_tile() +
  labs(title = "Heatmap: Old Age Benefits by Age and Economic Status", 
       x = "Age (years)", y = "Economic Status", fill = "Old Age Benefits (€)") +
  theme_minimal() +
  scale_fill_gradient(low = "lightblue", high = "darkred") + # Color scale for benefits
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotate x-axis labels

```

This heatmap shows the joint influence of age and economic status on the amount of old age benefits received by participants. Similar to the previous plots it is visible, that the economic status Retired shows the highest number of non-0€ old age benefit earners. Meanwhile most other status show hardly any participants that receive old age benefits. Another thing that can be seen here is the relationship between age and economic status with almost no students above the age of 35 and almost no retirees below 35 years of age.


## Testing Regression


```{r}
# Logistic regression for likelihood of receiving pensions
logit_model <- glm(
  old_age_benefits > 0 ~ age_years + economic_status + household_size + region_name,
  data = cleaned_data,
  family = binomial()
)
summary(logit_model)
```

```{r}

# Linear regression for benefit amounts among recipients
lm_model <- lm(
  old_age_benefits ~ age_years + economic_status + household_size + region_name,
  data = cleaned_data_no_zeros
)
summary(lm_model)
```


```{r}
# Logistic regression to predict pension receipt
logit_model <- glm(
  old_age_benefits > 0 ~ age_years + economic_status + household_size + region_name,
  data = cleaned_data,
  family = binomial()
)

summary(logit_model)

```

```{r}
exp(coef(logit_model)) # Convert coefficients to odds ratios

```

```{r}
library(MASS)
# Linear regression for pension amounts
lm_model <- lm(
  old_age_benefits ~ age_years + economic_status + household_size + region_name,
  data = cleaned_data_no_zeros
)

# Stepwise model selection using AIC
stepwise_model <- stepAIC(lm_model, direction = "both")
summary(stepwise_model)

```



```{r}
# Predicted probabilities by age and economic status
# predicted_probs <- data.frame(
#   age_years = seq(min(cleaned_data$age_years), max(cleaned_data$age_years), length.out = 100),
#   economic_status = "Retired"
# )
# predicted_probs$pension_prob <- predict(logit_model, newdata = predicted_probs, type = "response")
# 
# ggplot(predicted_probs, aes(x = age_years, y = pension_prob)) +
#   geom_line(color = "blue") +
#   labs(title = "Probability of Receiving a Pension by Age", x = "Age (years)", y = "Probability") +
#   theme_minimal()

```

```{r}
library(effects)

effect_plot <- allEffects(stepwise_model)
plot(effect_plot)

```


{{< pagebreak >}}
# Statistical Modeling

The Statistical Modeling chapter aims to investigate the key factors influencing old-age benefits (old_age_benefits) by employing various statistical techniques. Building upon the descriptive statistics presented in the previous section, which explored the distribution and characteristics of variables in the dataset, we now focus on quantifying the relationships between old-age benefits and several potential explanatory variables.

Given that old-age benefits is a continuous dependent variable, we will begin by applying linear regression as a baseline model, aiming to explain as much of the variation in benefits as possible through the independent variables available in the dataset. These variables include age (age_years), which intuitively may have a direct relationship with the amount of old-age benefits; economic status (economic_status), reflecting the respondent's primary economic activity and potential eligibility for benefits; region (region_name), which accounts for regional variations in benefit distributions; and household size (household_size), which could indicate whether individuals living in larger households might have different benefits due to family circumstances or financial assistance.

The primary objective is to understand how each of these factors, individually and in combination, contributes to the variation in old-age benefits. We will also examine potential interactions between predictors, particularly focusing on variables such as economic_status and age_years, where it might be expected that the effect of age could differ across different economic groups.

To begin with, exploratory data analysis (EDA) was performed to visualize the distributions of the key variables and check for any outliers, missing data, or skewed distributions that could impact the model. We will discuss how these factors were handled and their potential effect on the modeling process.

Once the model is built, we will evaluate its performance using several diagnostic tools, such as residual plots and goodness-of-fit statistics. This chapter will also discuss model assumptions, including linearity, homoscedasticity, and normality of residuals, and how these assumptions were validated.

The chapter will conclude by identifying the most significant predictors of old-age benefits, discussing the implications of these findings, and highlighting potential areas for further analysis. In addition, any limitations of the model, such as unexplained variability or non-significant predictors, will be addressed, and suggestions for potential refinements or alternative modeling approaches will be proposed.


{{< pagebreak >}}
## Linear Regression

The goal of the linear regression analysis is to understand how different variables (such as age_years, economic_status, region_name, and household_size) influence old_age_benefits. Specifically, we aim to model the relationship between these predictors and the dependent variable.

### Correlation Matrix for numerical variables

To get an overview of how the different variables could predict a participants old_age_benefits we first constructed a correlation matrix for the numerical variables to see possible positive or negative correlations. 

```{r}
cor_matrix <- cor(cleaned_data[, c("old_age_benefits", "age_years", "household_size", "main_income_earner")])
print(cor_matrix)
```

#### Interpretation Correlation Matrix:

1. **Old-age benefits and age**:  
   The correlation between `old_age_benefits` and `age_years` is **0.5645**, which indicates a moderate positive relationship. This suggests that older participants tend to receive higher old-age benefits, which makes sense given that benefits may increase with age.

2. **Old-age benefits and household size**:  
   The correlation between `old_age_benefits` and `household_size` is **-0.2644**, indicating a weak negative relationship. This means that as the household size increases, old-age benefits tend to decrease slightly, but the relationship is not strong.

3. **Old-age benefits and main income earner**:  
   The correlation of **0.2076** between `old_age_bits` and `main_income_earner` indicates a weak positive relationship. This suggests that individuals who are the main income earner in their household might receive slightly higher old-age benefits.



Before incorporating these numerical insights into our model, it's important to also assess how categorical variables, such as `economic_status` and `region_name`, influence `old_age_benefits`. Since categorical variables do not have a straightforward correlation with the dependent variable, one useful statistical test is **ANOVA (Analysis of Variance)**. ANOVA helps in understanding whether there are any statistically significant differences in the means of `old_age_benefits` across different levels of the categorical variables.

### ANOVA for categorical variables

We will now apply ANOVA to evaluate the impact of each category of `economic_status` and `region_name` on old-age benefits. By comparing the group means, we can determine which categorical predictors have a significant effect on the dependent variable. This step is crucial in enhancing our model by identifying relevant factors that may contribute to the variation in old-age benefits.

```{r}
# Use ANOVA for categorical variables
aov_econ <- aov(old_age_benefits ~ economic_status, data = cleaned_data_no_zeros)
summary(aov_econ)

aov_region <- aov(old_age_benefits ~ region_name, data = cleaned_data_no_zeros)
summary(aov_region)
```


```{r}
# Use ANOVA for categorical variables
aov_econ <- aov(old_age_benefits ~ economic_status, data = cleaned_data)
summary(aov_econ)

aov_region <- aov(old_age_benefits ~ region_name, data = cleaned_data)
summary(aov_region)
```
### ANOVA Results for Categorical Variables: Economic Status and Region

The ANOVA tests for economic_status and region_name reveal important insights into the relationship between these categorical variables and old_age_benefits.

Economic Status: The ANOVA result for economic_status is highly significant (F(6, 20697) = 4854, p < 2e-16). This indicates that there are substantial differences in the mean old-age benefits across the various categories of economic status. The extremely low p-value reinforces that economic status is a key factor in explaining the variability in old-age benefits.

Region Name: The ANOVA for region_name also shows a significant effect on old_age_benefits (F(2, 20701) = 13.35, p = 1.61e-06). This suggests that the region of the participants significantly influences the mean old-age benefits, with notable differences across regions.

Both economic status and region have highly significant effects on old-age benefits, making them important predictors. These findings highlight the importance of considering both variables when modeling old-age benefits, as they contribute meaningfully to explaining the variations in the outcome.


After this quick overview for all variables we decided to choose the age of the participants as the first variable considered as a potential predictor. The following code creates a linear model with old_age_benefits as the dependent variable and age_years as the predictor. This is first done with the cleaned dataset still containing rows for participants that do not receive old age benefits. The following code was used to create the linear model and show its summary:

```{r}
lm_age_with_zeros <- lm(old_age_benefits ~ age_years, data=cleaned_data)
summary(lm_age_with_zeros)
```

### Linear Model Summary: Old Age Benefits ~ Age Years

The linear model assesses the relationship between **old_age_benefits** (dependent variable) and **age_years** (independent variable). 

#### Key Results:
- **Intercept**: -7994.06 (p < 0.001): At age 0, the predicted old age benefits are negative €7,994, though not meaningful in this context.
- **Age Coefficient**: 256.76 (p < 0.001): For each additional year of age, the old age benefits are predicted to increase by €256.76 on average.
- **R-squared**: 0.3186: Approximately 31.86% of the variability in old age benefits is explained by age.
- **Residual Standard Error**: 6779: The typical deviation of observed old age benefits from the model's predictions is €6,779.
- **F-statistic**: 9681 (p < 0.001): The model is statistically significant overall.

#### Conclusion:

The model suggests a significant positive association between age and old-age benefits, as evidenced by the highly significant p-value and the positive slope coefficient. This indicates that, on average, older participants are likely to receive higher old-age benefits. However, the relatively low R-squared value of 0.3186 highlights that age alone explains only about 31.86% of the variability in old-age benefits. This suggests that the model may be missing other important predictors that influence old-age benefits, such as economic status, household size, or regional differences. Including such variables could improve the model's explanatory power and provide a more comprehensive understanding of the factors driving variability in old-age benefits.


In the visual exploration of our dataset, removing rows for participants who did not receive old-age benefits significantly improved the clarity and interpretability of the visualizations. This adjustment allowed us to focus on the distribution and relationships among participants who are actively receiving benefits, reducing the noise introduced by zeros. These zeros likely represent individuals who are ineligible for old-age benefits or have not yet started receiving them, such as students, younger individuals, or those outside the scope of the benefit system.

### Linear Model Summary: Old Age Benefits ~ Age Years - Old Age Benefits > €0

We expect that removing the zeros may enhance the model fit, reduce variability in the residuals, and yield coefficients that better represent the association within the subset of participants actively receiving benefits. This step will help us determine whether excluding zeros leads to a clearer and more statistically significant understanding of the factors driving old-age benefit levels.
```{r}
lm_age_without_zeros <- lm(old_age_benefits ~ age_years, data=cleaned_data_no_zeros)
summary(lm_age_without_zeros)

```
#### Key Summary Points
1. **Coefficients**: The intercept is **16,418.42**, and the slope for age is **-2.991**. The age coefficient is not statistically significant (p = 0.804), indicating no meaningful relationship between age and old-age benefits in this model.  
2. **Model Fit**: The **R-squared** value is **0.0000125**, showing the model explains virtually none of the variation in old-age benefits.  
3. **Residuals**: The **residual standard error** is high (**9,099**), indicating substantial variability that is not captured by the model.  
4. **F-statistic**: The overall model is not statistically significant (p = 0.8038), suggesting that age alone is not a useful predictor of old-age benefits in the subset of data without zeros.  

#### Argument for Using Box-Cox Transformation
The current model, after excluding zeros, performs poorly in explaining variability in old-age benefits. This poor fit could be due to the non-normality of residuals or the skewed distribution of the dependent variable. Given these issues, we will apply a **Box-Cox transformation** to explore whether transforming the dependent variable can improve the model by:

1. **Stabilizing Variance**: Addressing heteroscedasticity in residuals, which may distort the results.
2. **Improving Normality**: Making the distribution of residuals closer to normal, as linear regression assumes.
3. **Enhancing Model Fit**: Potentially improving the relationship between age and old-age benefits by finding a transformation that better aligns the data with linear regression assumptions.

### Box-Cox Transformation

The Box-Cox procedure provides an optimal transformation parameter (\( \lambda \)) that can systematically address these issues, allowing us to evaluate whether a transformed model offers better explanatory power and predictive accuracy.

```{r}
boxcox_transformed <- boxcox(cleaned_data_no_zeros$old_age_benefits ~ 1, lambda = seq(-2, 2, by = 0.1))

# Optimal lambda (from the plot)
lambda_optimal <- boxcox_transformed$x[which.max(boxcox_transformed$y)]
print(lambda_optimal)
```

#### Box-Cox Transformation Results
The Box-Cox plot suggests an optimal lambda (\( \lambda \)) of approximately **`r lambda_optimal`**. This value is chosen because it minimizes the log-likelihood function, indicating the best transformation to stabilize variance and improve normality of the dependent variable.

#### Application of Lambda
This `lambda_optimal` value will be used to transform the `old_age_benefits` variable using the formula:

$$
y(\lambda) = 
\begin{cases} 
\frac{y^\lambda - 1}{\lambda} & \text{if } \lambda \neq 0 \\
\ln(y) & \text{if } \lambda = 0
\end{cases}
$$

```{r}
cleaned_data_no_zeros$boxcox_old_age_benefits <- (cleaned_data_no_zeros$old_age_benefits^lambda_optimal - 1) / lambda_optimal

lm_boxcox_old_age_benefits <- lm(boxcox_old_age_benefits ~ age_years, data = cleaned_data_no_zeros)

summary(lm_boxcox_old_age_benefits)
```
#### Interpretation:

The Box-Cox transformation improved the residuals (lower standard error) but did **not improve the model's explanatory power**. The relationship between `age_years` and the transformed `old_age_benefits` is no longer statistically significant. In contrast, the original model (with zeros included) had a much stronger relationship, suggesting that removing the zeros or transforming the data did not enhance the model in this case.


#### Conclusion of transformation:

Given that removing observations with zero old-age benefits may result in a loss of valuable information, it may be worthwhile to explore the relationship between old-age benefits and multiple predictors. In this case, we will introduce economic_status as an additional explanatory variable, alongside age_years, to assess whether this combination offers a better fit for explaining the variability in old-age benefits. By working with the full dataset, including the zeros, we aim to capture a more comprehensive picture of the factors influencing old-age benefits across different economic groups.

### Adding Economic Status as a predictor

In this analysis, we extend the model by including economic_status as an additional predictor alongside age_years to assess whether it contributes significantly to explaining the variability in old-age benefits. This model aims to capture the combined effect of age and economic activity on old-age benefits.

```{r}
lm_age_econ <- lm(old_age_benefits ~ age_years + economic_status, data = cleaned_data)

summary(lm_age_econ)

```

This linear model suggests that age_years and certain categories within economic_status (such as Retired and Domestic) are statistically significant predictors of old-age benefits, with highly significant p-values for Retired and Domestic. Specifically, retirees are expected to receive significantly higher old-age benefits, while those engaged in domestic activities also have higher benefits compared to the reference category. The low p-values for PT_Work, Unemployed, Student, and Disabled indicate these categories are not significant predictors in this model.

The model's R-squared value of 0.5847 indicates that roughly 58% of the variance in old-age benefits is explained by age and economic status.



### Transition to Regression with Retirees

The previous analyses have shown that the economic status categories 'Retired' and 'Domestic' are significant predictors of old-age benefits. However, within the cleaned dataset (excluding zeros), retirees account for over 96% of the remaining observations, with less than 4% belonging to other economic status categories. This extreme imbalance limits the reliability of insights drawn from non-retirees and underscores that retirees dominate the population of interest.

Further, the removal of zeros has substantially altered the dataset's composition, as shown in the **Comparison of Key Variables Before and After Cleaning** table in the Data Cleaning chapter:

```{r}
knitr::kable(comparison_summary, caption = "Comparison of Key Variables Before and After Removing Rows with Old Age Benefits = 0") |>
  kableExtra::kable_styling(full_width = FALSE, position = "center")
```


Given these observations, it is logical to focus exclusively on retirees for further linear regression modeling. By isolating retirees, we can more accurately capture the patterns and relationships specific to the largest and most relevant group in the dataset.


```{r}
# Filter the dataset to include only rows where economic_status is 'Retired' or 'Domestic'
cleaned_data_no_zeros_retirees_only <- cleaned_data_no_zeros %>%
  filter(economic_status %in% c("Retired", "Domestic"))

```


```{r}
# Adding region_name as a third predictor to the model
lm_age_econ_region <- lm(old_age_benefits ~ region_name, data = cleaned_data_no_zeros_retirees_only)


```

```{r}
cor_matrix <- cor(cleaned_data[, c("old_age_benefits", "age_years", "household_size", "main_income_earner")])
print(cor_matrix)
```

```{r}
# Use ANOVA for categorical variables
aov_econ <- aov(old_age_benefits ~ economic_status, data = cleaned_data)
summary(aov_econ)

aov_region <- aov(old_age_benefits ~ region_name, data = cleaned_data)
summary(aov_region)
```

